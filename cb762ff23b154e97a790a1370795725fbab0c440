{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b90e0195_af95a510",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-09-15T16:57:07Z",
      "side": 1,
      "message": "Is there a Set command need the same fix?",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 7
      },
      "revId": "cb762ff23b154e97a790a1370795725fbab0c440",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "587c9a42_46ccfbe6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1001220
      },
      "writtenOn": "2022-09-16T22:04:34Z",
      "side": 1,
      "message": "Thank you for that catch, I hadn\u0027t even thought of that for some reason.",
      "parentUuid": "b90e0195_af95a510",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 7
      },
      "revId": "cb762ff23b154e97a790a1370795725fbab0c440",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f5f54b4_112d1998",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 6
      },
      "lineNbr": 332,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-09-15T16:57:07Z",
      "side": 1,
      "message": "This should continue to look for \"Pwm\" to handle fan and pwm don\u0027t use the same channel/index",
      "range": {
        "startLine": 329,
        "startChar": 1,
        "endLine": 332,
        "endChar": 21
      },
      "revId": "cb762ff23b154e97a790a1370795725fbab0c440",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db3867b6_3b821342",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 6
      },
      "lineNbr": 332,
      "author": {
        "id": 1001220
      },
      "writtenOn": "2022-09-16T22:04:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f5f54b4_112d1998",
      "range": {
        "startLine": 329,
        "startChar": 1,
        "endLine": 332,
        "endChar": 21
      },
      "revId": "cb762ff23b154e97a790a1370795725fbab0c440",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c679daa_c60eebed",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 6
      },
      "lineNbr": 332,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-09-17T00:12:06Z",
      "side": 1,
      "message": "The issue is not addressed correctly. The  change  does not fallback to find(\"Pwm\"), which would be the Pwm channel for the fan instance. They are not always the same.",
      "parentUuid": "db3867b6_3b821342",
      "range": {
        "startLine": 329,
        "startChar": 1,
        "endLine": 332,
        "endChar": 21
      },
      "revId": "cb762ff23b154e97a790a1370795725fbab0c440",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b80e4bf6_38bd2b02",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 6
      },
      "lineNbr": 332,
      "author": {
        "id": 1001220
      },
      "writtenOn": "2022-09-18T18:57:19Z",
      "side": 1,
      "message": "I see. I misunderstood your original intent. I will add this change. It is not how the command originally behaved, but it does sound like a better solution. However, should it prefer to check for Pwm over index then?",
      "parentUuid": "7c679daa_c60eebed",
      "range": {
        "startLine": 329,
        "startChar": 1,
        "endLine": 332,
        "endChar": 21
      },
      "revId": "cb762ff23b154e97a790a1370795725fbab0c440",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}