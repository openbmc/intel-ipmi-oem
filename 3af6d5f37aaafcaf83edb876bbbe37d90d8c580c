{
  "comments": [
    {
      "key": {
        "uuid": "86c6f9af_6693cef2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000414
      },
      "writtenOn": "2021-08-16T14:17:40Z",
      "side": 1,
      "message": "I believe it should be all features right?",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0be4b7e_197269f1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-08-19T12:04:00Z",
      "side": 1,
      "message": "at present it supports only mctp related services. We can extend it to other services on the need bassis.",
      "parentUuid": "86c6f9af_6693cef2",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5de22b3_a54377db",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-08-25T07:05:09Z",
      "side": 1,
      "message": "yes. we will add support based on need.",
      "parentUuid": "b0be4b7e_197269f1",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0db1d3de_a7ef4507",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-08-19T05:09:08Z",
      "side": 1,
      "message": "nit: it might be conventional to provide the supported feature as first byte and enable/disable feature as subsequent byte",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d647f8c_7cd7da56",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-08-19T12:04:00Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "0db1d3de_a7ef4507",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5579acb0_be2e10a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-08-25T07:05:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d647f8c_7cd7da56",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1708cc37_5622891b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1000414
      },
      "writtenOn": "2021-08-16T14:17:40Z",
      "side": 1,
      "message": "Is it verified after AC cycle as well?",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ede1e37_f0a632bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-08-17T21:11:51Z",
      "side": 1,
      "message": "I extended the command to provide service enable and disable options that will persist across AC cycles here: gerrit.openbmc-project.xyz/c/openbmc/intel-ipmi-oem/+/45970.\n\nThis is required for the PCIe scan disable.  Feel free to pull those changes into this commit if it makes more sense.  Thanks!",
      "parentUuid": "1708cc37_5622891b",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dfb3d73_9a223eb0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-08-25T07:05:09Z",
      "side": 1,
      "message": "I pulled the changes to preserve service status across reboots to this commit.",
      "parentUuid": "1ede1e37_f0a632bf",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe3f024d_289d2c45",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-08-19T12:04:00Z",
      "side": 1,
      "message": "it is not used any where.",
      "range": {
        "startLine": 40,
        "startChar": 25,
        "endLine": 40,
        "endChar": 43
      },
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c6690d1_f9260975",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-08-25T07:05:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe3f024d_289d2c45",
      "range": {
        "startLine": 40,
        "startChar": 25,
        "endLine": 40,
        "endChar": 43
      },
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8dacb79_1f8f6fed",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1007,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-08-19T12:04:00Z",
      "side": 1,
      "message": "i think it will be good if can return some status so that in failure cases we can return some error completion code.",
      "range": {
        "startLine": 1007,
        "startChar": 7,
        "endLine": 1007,
        "endChar": 12
      },
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a55bcf1_fd8f1ba3",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1007,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-08-25T07:05:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8dacb79_1f8f6fed",
      "range": {
        "startLine": 1007,
        "startChar": 7,
        "endLine": 1007,
        "endChar": 12
      },
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7ea7aeb_8d6a10a6",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1024,
      "author": {
        "id": 1000414
      },
      "writtenOn": "2021-08-16T14:17:40Z",
      "side": 1,
      "message": "Since idea is to extend for other needed features as well,can the method be made generic?",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0511e552_1ce2725e",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1024,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-08-19T12:04:00Z",
      "side": 1,
      "message": "I think this method is indented only for  mctp. The same will not help for other services.",
      "parentUuid": "d7ea7aeb_8d6a10a6",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f367711e_0baa41b8",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1024,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-08-25T07:05:09Z",
      "side": 1,
      "message": "This is mctp specific. Only startOrStopService() can be generic.",
      "parentUuid": "d7ea7aeb_8d6a10a6",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac827e55_ea813e7c",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1024,
      "author": {
        "id": 1000414
      },
      "writtenOn": "2021-08-26T12:58:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f367711e_0baa41b8",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d7a39ef_10688748",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1054,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-08-19T12:04:00Z",
      "side": 1,
      "message": "we can break here. I don`t think we will have multiple services for same binding",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e056187b_637fe8cd",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1054,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-08-25T07:05:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d7a39ef_10688748",
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f42d0b90_f614b581",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1072,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-08-19T12:04:00Z",
      "side": 1,
      "message": "const?",
      "range": {
        "startLine": 1071,
        "startChar": 36,
        "endLine": 1072,
        "endChar": 74
      },
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b18e07e2_a2013a11",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1072,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2021-08-25T07:05:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f42d0b90_f614b581",
      "range": {
        "startLine": 1071,
        "startChar": 36,
        "endLine": 1072,
        "endChar": 74
      },
      "revId": "3af6d5f37aaafcaf83edb876bbbe37d90d8c580c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}