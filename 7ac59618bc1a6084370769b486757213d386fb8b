{
  "comments": [
    {
      "key": {
        "uuid": "5033690b_097a9725",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-03-29T08:33:11Z",
      "side": 1,
      "message": "This issue is resolved at https://gerrit.openbmc-project.xyz/c/openbmc/intel-ipmi-oem/+/40362. Can you check with latest source code?",
      "range": {
        "startLine": 7,
        "startChar": 5,
        "endLine": 7,
        "endChar": 38
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ddd0081_e472b9c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-03-30T09:07:37Z",
      "side": 1,
      "message": "Not sure how that change solves the issue, but I probably will test it later (it will take a while).",
      "parentUuid": "5033690b_097a9725",
      "range": {
        "startLine": 7,
        "startChar": 5,
        "endLine": 7,
        "endChar": 38
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "155f5935_bfb5b6b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-07-01T07:42:17Z",
      "side": 1,
      "message": "Above specified patch is already merged. You can try the latest code and check issues what you are observing. If you still feels this change need, do rebase on top for further review.",
      "parentUuid": "1ddd0081_e472b9c2",
      "range": {
        "startLine": 7,
        "startChar": 5,
        "endLine": 7,
        "endChar": 38
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a53be1f3_e788dea4",
        "filename": "src/sensorcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-03-29T08:33:11Z",
      "side": 1,
      "message": "This will have performance impact. have you checked it?\n\nExample case: If user is continuously requesting for invalid sensor(which doesn\u0027t exist), Then rescan will occur in loop and may choke the D-Bus overtime( On slow processors systems, This can be evident).",
      "range": {
        "startLine": 241,
        "startChar": 8,
        "endLine": 258,
        "endChar": 75
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cd21768_f3b959a9",
        "filename": "src/sensorcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-03-30T09:07:37Z",
      "side": 1,
      "message": "No, I didn\u0027t, I had not such cases, when one request particular sensor, but probably you right. Typically clients asks entire list, but I agree it is possible that someone asks particular sdrs after initial scan.\nOur problem was on host first boot, when dbus-sensors create list of sensors, such as CPU temperatures and almost in same time BIOS requests SDR list. And here we got fails which broke some BIOS initialization.",
      "parentUuid": "a53be1f3_e788dea4",
      "range": {
        "startLine": 241,
        "startChar": 8,
        "endLine": 258,
        "endChar": 75
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f9fba77_8b691b5a",
        "filename": "src/sensorcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-03-29T08:33:11Z",
      "side": 1,
      "message": "Move this inside above for loop.",
      "range": {
        "startLine": 261,
        "startChar": 4,
        "endLine": 264,
        "endChar": 5
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6f64699_503a90cd",
        "filename": "src/sensorcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-03-30T09:07:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3f9fba77_8b691b5a",
      "range": {
        "startLine": 261,
        "startChar": 4,
        "endLine": 264,
        "endChar": 5
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}