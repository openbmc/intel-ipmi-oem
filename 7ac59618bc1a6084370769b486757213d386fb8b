{
  "comments": [
    {
      "key": {
        "uuid": "5033690b_097a9725",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-03-29T08:33:11Z",
      "side": 1,
      "message": "This issue is resolved at https://gerrit.openbmc-project.xyz/c/openbmc/intel-ipmi-oem/+/40362. Can you check with latest source code?",
      "range": {
        "startLine": 7,
        "startChar": 5,
        "endLine": 7,
        "endChar": 38
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a53be1f3_e788dea4",
        "filename": "src/sensorcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-03-29T08:33:11Z",
      "side": 1,
      "message": "This will have performance impact. have you checked it?\n\nExample case: If user is continuously requesting for invalid sensor(which doesn\u0027t exist), Then rescan will occur in loop and may choke the D-Bus overtime( On slow processors systems, This can be evident).",
      "range": {
        "startLine": 241,
        "startChar": 8,
        "endLine": 258,
        "endChar": 75
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f9fba77_8b691b5a",
        "filename": "src/sensorcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-03-29T08:33:11Z",
      "side": 1,
      "message": "Move this inside above for loop.",
      "range": {
        "startLine": 261,
        "startChar": 4,
        "endLine": 264,
        "endChar": 5
      },
      "revId": "7ac59618bc1a6084370769b486757213d386fb8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}