{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7ee9f4f3_bcf37f23",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-01-06T12:22:17Z",
      "side": 1,
      "message": "nit: Please add byte definitions for the command.",
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33b10296_4be83e6f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1001287
      },
      "writtenOn": "2022-02-03T10:25:07Z",
      "side": 1,
      "message": "Will add the following commands and steps for verification in the commit message as well:\nEnter MTM mode : cmdtool.efi 20 C0 B4 3 2 -\u003e ipmitool raw 0x30 0xB4 3 2\nExit MTM mode : cmdtool.efi 20 C0 B4 3 0 -\u003e ipmitool raw 0x30 0xB4 3 0\n\nStop service    : ipmitool raw 0x30 0xA4 2 0 0 0 0\nStart service   : ipmitool raw 0x30 0xA4 2 1 0 0 0\nDisable service : ipmitool raw 0x30 0xA4 2 2 0 0 0\nEnable service  : ipmitool raw 0x30 0xA4 2 3 0 0 0",
      "parentUuid": "7ee9f4f3_bcf37f23",
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ae7f52b_bd47f257",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-01-07T07:49:28Z",
      "side": 1,
      "message": "Also, need a test invoking the command when the BMC is not in manufacturing mode.\n\nThis command should not work in normal BMC operation.",
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b1b45df_35d494c4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1001287
      },
      "writtenOn": "2022-02-03T10:25:07Z",
      "side": 1,
      "message": "Yes, verified this step.",
      "parentUuid": "5ae7f52b_bd47f257",
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7fc075e_0bffb2cf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-12-10T04:05:38Z",
      "side": 1,
      "message": "Tested with which user? root? how about other IPMI/Redfish users configured in the BMC- can they ssh as well?",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 19,
        "endChar": 49
      },
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f947eca_6e70bc2a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-01-06T03:34:27Z",
      "side": 1,
      "message": "Any update on this?",
      "parentUuid": "b7fc075e_0bffb2cf",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 19,
        "endChar": 49
      },
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a833fe7f_64fa1eb5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1001287
      },
      "writtenOn": "2022-02-03T10:05:40Z",
      "side": 1,
      "message": "Tested with 2 users - root and debuguser. The action will be applied on all the users.",
      "parentUuid": "5f947eca_6e70bc2a",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 19,
        "endChar": 49
      },
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e889a60_1a6c70f5",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1152,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-01-06T12:22:17Z",
      "side": 1,
      "message": "I don\u0027t think directly using system call in the code for all these operations is a good idea. Can we leverage special mode manager implementation by exposing its existing functionality over the D-bus. https://github.com/intel-innersource/firmware.bmc.openbmc.applications.special-mode-manager/blob/7dc05af0adc32e0f16cd2e4f47956a6b2a470790/src/specialmodemgr.cpp#L150\nLet special mode manager handle all the intelligent part. From here we can just make the D-Bus call and perform the action.",
      "range": {
        "startLine": 1152,
        "startChar": 22,
        "endLine": 1152,
        "endChar": 32
      },
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12737642_7ac99aad",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1152,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-01-06T12:23:38Z",
      "side": 1,
      "message": "Also, it will help to avoid having same functionality at 2 places.",
      "parentUuid": "1e889a60_1a6c70f5",
      "range": {
        "startLine": 1152,
        "startChar": 22,
        "endLine": 1152,
        "endChar": 32
      },
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cda389bb_d88fadea",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1152,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-01-07T07:47:45Z",
      "side": 1,
      "message": "May be consider the possibility of just using enable-disable ssh script?",
      "parentUuid": "12737642_7ac99aad",
      "range": {
        "startLine": 1152,
        "startChar": 22,
        "endLine": 1152,
        "endChar": 32
      },
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dfd8c7a_57e3d7eb",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1152,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-01-20T16:17:06Z",
      "side": 1,
      "message": "+1.  We might consider not supporting the start/stop functionality for SSH and only use enable/disable with the existing script.  Then we don\u0027t need as much special handling.\n\nOn that thought, does the existing startOrStopService() function not work for the socket?",
      "parentUuid": "cda389bb_d88fadea",
      "range": {
        "startLine": 1152,
        "startChar": 22,
        "endLine": 1152,
        "endChar": 32
      },
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0458a35c_7b11ed7f",
        "filename": "src/manufacturingcommands.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1152,
      "author": {
        "id": 1001287
      },
      "writtenOn": "2022-02-03T10:25:07Z",
      "side": 1,
      "message": "So with startOrStopService we can start/stop the dropbear.socket, but we can\u0027t use wildcard entries here to start/stop all the active dropbear services, without which the already active and connected ssh sessions will not be disconnected. Hence the usage of systemctl.\n\nIf we are not supporting start/stop of ssh in this manufacturing mode we can go with using enable-ssh script only.",
      "parentUuid": "9dfd8c7a_57e3d7eb",
      "range": {
        "startLine": 1152,
        "startChar": 22,
        "endLine": 1152,
        "endChar": 32
      },
      "revId": "bdffaad4a2c4c333f329c60c2569818495637b7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}