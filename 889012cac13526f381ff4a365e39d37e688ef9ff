{
  "comments": [
    {
      "key": {
        "uuid": "f8963c8d_3175248c",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-22T17:58:03Z",
      "side": 1,
      "message": "Does this need to be configurable?  The only thing we\u0027re really changing is making escaped values work properly, right?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a31397a8_d473e19b",
        "filename": "CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-03-23T05:40:00Z",
      "side": 1,
      "message": "right. Is it expected that the name always be the escaped values? If so, we can also remove the other options?\n\nI was just thinking that maybe some people are dependent on the current setup.\n\nWe can also force them to switch to using the object path.",
      "parentUuid": "f8963c8d_3175248c",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20389b36_77579b78",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 665,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-22T17:55:07Z",
      "side": 1,
      "message": "nit: declare your variables where they\u0027re used.",
      "range": {
        "startLine": 665,
        "startChar": 49,
        "endLine": 665,
        "endChar": 55
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cacd848_6c687b97",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 665,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-03-23T05:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20389b36_77579b78",
      "range": {
        "startLine": 665,
        "startChar": 49,
        "endLine": 665,
        "endChar": 55
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cde3de4_08155590",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 667,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-22T17:55:07Z",
      "side": 1,
      "message": "If this is empty shouldn\u0027t this function return false?",
      "range": {
        "startLine": 666,
        "startChar": 0,
        "endLine": 667,
        "endChar": 13
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08fc9cd8_27ecfdae",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 667,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-03-23T05:40:00Z",
      "side": 1,
      "message": "Done.\n\nI am not even sure if it is possible to have an empty object path. Maybe we can force the entity manager to have that with this.",
      "parentUuid": "2cde3de4_08155590",
      "range": {
        "startLine": 666,
        "startChar": 0,
        "endLine": 667,
        "endChar": 13
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0015411b_fac58fc5",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 671,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-22T17:55:07Z",
      "side": 1,
      "message": "use objectPath.filename() here to get the file, and objectPath.parentPath() to get the prefix.\n\nPart of me actually wonders if we could put the sd_bus_path_decode logic into the filename() method itself.  That seems much simpler.  It would mean filename would now give properly unescaped paths instead of escaped ones, but that seems unlikely to break anything, and better.",
      "range": {
        "startLine": 671,
        "startChar": 0,
        "endLine": 671,
        "endChar": 62
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29931f4e_2cb4fe5e",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 671,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-03-23T17:30:03Z",
      "side": 1,
      "message": "Oh yeah, that would make more sense and covers other cases other than this repo.\n\nThe only issue I have is that it may have delays in getting the filename(). This will force all object path to have to go through the decode process every time it is create... It looks like each object path is created and not linked, so they will be forced to decode for every path even if some are the same. Is there a way to cache them like what we have here, but on a larger scale?\n\nJust for my reference: https://github.com/openbmc/sdbusplus/blob/4b646236df12b52205d2098ef985280190b358a7/include/sdbusplus/message/native_types.hpp#L144",
      "parentUuid": "0015411b_fac58fc5",
      "range": {
        "startLine": 671,
        "startChar": 0,
        "endLine": 671,
        "endChar": 62
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5168566_2d372a2e",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 682,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-22T17:55:07Z",
      "side": 1,
      "message": "Is this variable needed?  Can we just use name here, and populate it through?  They look equivalent.",
      "range": {
        "startLine": 682,
        "startChar": 24,
        "endLine": 682,
        "endChar": 30
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe5ea52a_89668a12",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 682,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-03-23T05:40:00Z",
      "side": 1,
      "message": "Done.\n\nyeah, don\u0027t need it anymore. I think I wanted to do some check on the output first before setting it to name... but looks like no extra is needed.",
      "parentUuid": "d5168566_2d372a2e",
      "range": {
        "startLine": 682,
        "startChar": 24,
        "endLine": 682,
        "endChar": 30
      },
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d526bda_20b9c5fa",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 683,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-22T17:55:07Z",
      "side": 1,
      "message": "This method should return, right?\n\nPresumably if sd_bus_path_decode fails we shouldn\u0027t be freeing the string.",
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca7be5f3_9cb43f75",
        "filename": "src/storagecommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 683,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-03-23T05:40:00Z",
      "side": 1,
      "message": "Do we want to return false on failure or just not set the `name`?\n\nIf it fail, we can just use `BOARD_PRODUCT_NAME` or `PRODUCT_PRODUCT_NAME` as the name.?",
      "parentUuid": "0d526bda_20b9c5fa",
      "revId": "889012cac13526f381ff4a365e39d37e688ef9ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}